{"version":3,"sources":["components/Tweet.js","components/OldTweets.js","lib/api.js","components/tweetInput.js","pages/Home.js","components/NavBar.js","pages/Profile.jsx","App.js","reportWebVitals.js","index.js"],"names":["Tweet","props","tweet","className","userName","date","content","oldTweets","tweets","map","id","BaseUrl","a","axios","get","response","data","sendTweet","post","TweetInput","useState","setTweet","loading","setLoading","textLimit","length","handleFormSubmit","event","preventDefault","myTweet","Date","toISOString","submitTweet","alert","onSubmit","value","placeholder","onChange","target","class","type","disabled","style","bottom","Home","setTweets","useEffect","loadTweets","getTweets","then","interval","setInterval","clearInterval","prevTweets","OldTweets","Navbar","to","Profile","onUserNameChange","setUserName","localStorage","setItem","App","getItem","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.86f144e9.chunk.js","sourcesContent":["const Tweet = (props) => {\n  const { tweet } = props;\n  return (\n    <div className=\"tweetPDiv\">\n      <div className=\"tweets\">\n        <div className=\"tweetUserName\">{tweet.userName}</div>\n        <div className=\"tweetDate\">{tweet.date}</div>\n      </div>\n      <div className=\"tweetContent\">{tweet.content}</div>\n    </div>\n  );\n};\n\nexport default Tweet;\n","import Tweet from \"./Tweet\";\n\nconst oldTweets = (props) => {\n  const { tweets } = props;\n  return (\n    <div>\n      {tweets.map((tweet) => (\n        <div key={tweet.id} className=\"mb-3\">\n          <Tweet tweet={tweet} />\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default oldTweets;\n","import axios from \"axios\";\n\nconst BaseUrl =\n  \"https://micro-blogging-dot-full-stack-course-services.ew.r.appspot.com/tweet\";\n\nexport async function getTweets() {\n  const response = await axios.get(BaseUrl);\n  return response.data;\n}\n\nexport async function sendTweet(tweet) {\n  const response = await axios.post(BaseUrl, tweet);\n  return response.data;\n}\n","import { useState } from \"react\";\nimport { sendTweet } from \"../lib/api\";\nimport { Context } from \"../context/context\";\nimport { useContext } from \"react\";\n\nconst TweetInput = (props) => {\n  const [tweet, setTweet] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const textLimit = tweet.length > 140;\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    if (textLimit) {\n      return;\n    }\n    const myTweet = {\n      content: tweet,\n      userName: props.userName,\n      date: new Date().toISOString(),\n    };\n    setLoading(true);\n    try {\n      const data = await sendTweet(myTweet);\n      props.submitTweet(data);\n    } catch (e) {\n      alert(\"Server error when adding a tweet\");\n    }\n    setLoading(false);\n    setTweet(\"\");\n  };\n  return (\n    <form className=\"form\" onSubmit={handleFormSubmit}>\n      <textarea\n        className=\"tweetArea\"\n        value={tweet}\n        placeholder=\"What you have in mind...\"\n        onChange={(event) => setTweet(event.target.value)}\n      ></textarea>\n      <div className=\"btnDiv\">\n        <div>\n          {loading && <div class=\"spinner-border loadPos\"></div>}\n          <button\n            className=\"btn btn-primary\"\n            type=\"submit\"\n            disabled={textLimit}\n          >\n            Tweet\n          </button>\n        </div>\n      </div>\n      {textLimit && (\n        <div style={{ bottom: 20 }} className=\"textLimitReached\">\n          The tweet can't contain more then 140 chars.\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default TweetInput;\n","import { useEffect, useState } from \"react\";\nimport OldTweets from \"../components/OldTweets\";\nimport { getTweets } from \"../lib/api\";\nimport TweetInput from \"../components/tweetInput\";\nimport { UserContext } from \"../context/context\";\n\nconst Home = (props) => {\n  const [tweets, setTweets] = useState([]);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    setLoading(true);\n    const loadTweets = () => {\n      getTweets().then((data) => {\n        setTweets(data.tweets);\n        setLoading(false);\n      });\n    };\n    loadTweets();\n    let interval = setInterval(() => {\n      loadTweets();\n    }, 8000);\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n  const handleOnNewTweet = (tweet) => {\n    setTweets((prevTweets) => [tweet, ...prevTweets]);\n  };\n  return (\n    <div className=\"homeDiv\">\n      <div className=\"TweetInputDiv\">\n        <TweetInput userName={props.userName} submitTweet={handleOnNewTweet} />\n      </div>\n      {loading && <div class=\"spinner-border \"></div>}\n      <OldTweets tweets={tweets} />\n    </div>\n  );\n};\n\nexport default Home;\n","import { NavLink } from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className=\"navBar\">\r\n      <ul>\r\n        <li className=\"navLink\">\r\n          <NavLink to=\"/\" className=\"navLink\">\r\n            Home\r\n          </NavLink>\r\n        </li>\r\n        <li className=\"navLink\">\r\n          <NavLink to=\"/Profile\" className=\"navLink\">\r\n            Profile\r\n          </NavLink>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nconst Profile = (props) => {\r\n  const { onUserNameChange } = props;\r\n  const [userName, setUserName] = useState(props.userName);\r\n  useEffect(() => {\r\n    setUserName(props.userName);\r\n  }, [props.userName]);\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    localStorage.setItem(\"userName\", userName);\r\n    onUserNameChange(userName);\r\n  };\r\n  return (\r\n    <form onSubmit={onSubmit} className=\"profileForm\">\r\n      <h1 className=\"profile\">Profile</h1>\r\n      <div>\r\n        <label className=\"userName\">UserName</label>\r\n        <input\r\n          onChange={(event) => setUserName(event.target.value)}\r\n          value={userName}\r\n          type=\"text\"\r\n          className=\"userNameTextArea\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <button className=\"btnUserName\">Save</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import Home from \"./pages/Home\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Navbar from \"./components/NavBar\";\nimport Profile from \"./pages/Profile\";\nimport { useEffect, useState } from \"react\";\n\nfunction App() {\n  const [userName, setUserName] = useState(\"\");\n  useEffect(() => {\n    const userName = localStorage.getItem(\"userName\");\n    setUserName(userName);\n  }, []);\n  return (\n    <div className=\"container\">\n      <Router>\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\">\n            <Home userName={userName} />\n          </Route>\n          <Route path=\"/profile\">\n            <Profile\n              userName={userName}\n              onUserNameChange={(userName) => setUserName(userName)}\n            />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}